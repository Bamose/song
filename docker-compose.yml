services:
  mongo:
    image: mongo:6
    container_name: song-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=songdb

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: song-backend
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb://mongo:27017/songdb
      - PORT=5000
      - NODE_ENV=production
    depends_on:
      - mongo
    volumes:
      - ./apps/backend:/app
      - /app/node_modules

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    container_name: song-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - HOST=0.0.0.0
      - PORT=3000
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    volumes:
      - ./apps/frontend:/srv/app/apps/frontend
      - /srv/app/apps/frontend/node_modules
    command: sh -lc "cd /srv/app && pnpm install && cd /srv/app/apps/frontend && pnpm dev"

  announce:
    image: busybox:1.36
    container_name: song-announce
    profiles: ["announce"]
    depends_on:
      - backend
      - frontend
    command: >
      sh -c "
        echo 'Waiting for backend health...';
        for i in 1 2 3 4 5 6 7 8 9 10; do
          wget -qO- http://backend:5000/health >/dev/null 2>&1 && break || sleep 1;
        done;
        echo;
        echo 'Song app is up:';
        echo '  Frontend: http://localhost:3000';
        echo '  Backend:  http://localhost:5000';
        echo '  Docs:     http://localhost:5000/docs';
        echo '  OpenAPI:  http://localhost:5000/openapi.json';
        echo;
      "
    restart: "no"

volumes:
  mongo_data:
